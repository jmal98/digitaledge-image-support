<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>container-service</artifactId>

	<parent>
		<groupId>com.deleidos</groupId>
		<artifactId>digital-edge-image-support</artifactId>
		<version>2.1.1</version>
		<relativePath>../digital-edge-image-support/pom.xml</relativePath>
	</parent>

	<repositories>
		<repository>
			<id>sonatype</id>
			<url>https://oss.sonatype.org/content/groups/public/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>


<!--TODO should continue to auto build Docker image? -->
<!--
	<profiles>
		<profile>
			<id>container</id>
			<activation>
				<os>
					<family>Unix</family>
				</os>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>pre-build-container-service-container</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>cp</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>-fv</argument>
										<argument>${basedir}/Dockerfile</argument>
										<argument>Dockerfile</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>build-container-service-container</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>build</argument>
										<argument>&#x002d;&#x002d;rm=true</argument>
										<argument>&#x002d;&#x002d;force-rm=true</argument>
										<argument>&#x002d;&#x002d;tag</argument>
										<argument>digitaledge/container-service:latest</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>tag-container-service-container</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>tag</argument>
										<argument>digitaledge/container-service:latest</argument>
										<argument>${digitaledge.private.registry}/digitaledge/container-service:latest</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>push-container-service-container-to-digitaledge-repo</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>push</argument>
										<argument>${digitaledge.private.registry}/digitaledge/container-service:latest</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	-->


	<dependencies>
		<dependency>
			<groupId>com.github.docker-java</groupId>
			<artifactId>docker-java</artifactId>
			<version>3.0.0-RC1</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-util</artifactId>
		</dependency>


		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-jetty-http</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-moxy</artifactId>
		</dependency>


		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>



		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
		</dependency>



		<dependency>
			<groupId>com.deleidos</groupId>
			<artifactId>containers</artifactId>
			<version>${project.version}</version>
			<type>zip</type>
			<classifier>dockerfiles</classifier>
		</dependency>


		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-server</artifactId>
				<version>9.3.6.v20151106</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-servlet</artifactId>
				<version>9.3.6.v20151106</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-continuation</artifactId>
				<version>9.3.6.v20151106</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-util</artifactId>
				<version>9.3.6.v20151106</version>
			</dependency>

			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-server</artifactId>
				<version>2.22.1</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.containers</groupId>
				<artifactId>jersey-container-servlet-core</artifactId>
				<version>2.22.1</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.containers</groupId>
				<artifactId>jersey-container-jetty-http</artifactId>
				<version>2.22.1</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.media</groupId>
				<artifactId>jersey-media-moxy</artifactId>
				<version>2.22.1</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-client</artifactId>
				<version>2.22.1</version>
			</dependency>


			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.7.9</version>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.0.13</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.8</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>2.5.4</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-json-provider</artifactId>
				<version>2.5.4</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-yaml</artifactId>
				<version>2.5.4</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.3.1</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-common</artifactId>
				<version>2.22.1</version>
			</dependency>
			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>javax.ws.rs-api</artifactId>
				<version>2.0.1</version>
			</dependency>

		</dependencies>
	</dependencyManagement>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<dependencyConvergence />
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.4.2</version>
				<configuration>
					<createDependencyReducedPom>true</createDependencyReducedPom>
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>

				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>com.deleidos.rtws.container.service.application.ContainerService</Main-Class>
									</manifestEntries>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-system-base.tar.gz</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.deleidos</groupId>
									<artifactId>containers</artifactId>
									<version>${project.version}</version>
									<type>tar.gz</type>
									<classifier>system-base</classifier>
									<overWrite>true</overWrite>
									<outputDirectory>${project.build.directory}</outputDirectory>
									<destFileName>system-base.tar.gz</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>com.deleidos</groupId>
									<artifactId>containers</artifactId>
									<version>${project.version}</version>
									<type>tar.gz</type>
									<classifier>activemq</classifier>
									<overWrite>true</overWrite>
									<outputDirectory>${project.build.directory}</outputDirectory>
									<destFileName>activemq.tar.gz</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>com.deleidos</groupId>
									<artifactId>containers</artifactId>
									<version>${project.version}</version>
									<type>tar.gz</type>
									<classifier>gateway</classifier>
									<overWrite>true</overWrite>
									<outputDirectory>${project.build.directory}</outputDirectory>
									<destFileName>gateway.tar.gz</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>com.deleidos</groupId>
									<artifactId>containers</artifactId>
									<version>${project.version}</version>
									<type>tar.gz</type>
									<classifier>transport</classifier>
									<overWrite>true</overWrite>
									<outputDirectory>${project.build.directory}</outputDirectory>
									<destFileName>transport.tar.gz</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>com.deleidos</groupId>
									<artifactId>containers</artifactId>
									<version>${project.version}</version>
									<type>tar.gz</type>
									<classifier>ingest</classifier>
									<overWrite>true</overWrite>
									<outputDirectory>${project.build.directory}</outputDirectory>
									<destFileName>ingest.tar.gz</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>com.deleidos</groupId>
									<artifactId>containers</artifactId>
									<version>${project.version}</version>
									<type>tar.gz</type>
									<classifier>custom</classifier>
									<overWrite>true</overWrite>
									<outputDirectory>${project.build.directory}</outputDirectory>
									<destFileName>custom.tar.gz</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<properties>
		<digitaledge.private.registry>der.deleidos.com</digitaledge.private.registry>
	</properties>
</project>
